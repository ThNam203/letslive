openapi: 3.0.0
info:
  title: User Service API
  version: 1.0.0
  description: API documentation for the User Service

servers:
  - url: /api/v1
    description: API v1

components:
  schemas:
    Error:
      type: object
      properties:
        statusCode:
          type: integer
          example: 500
        message:
          type: string
          example: "internal server error"

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
        isVerified:
          type: boolean
        createdAt:
          type: string
          format: date-time
        phoneNumber:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        profilePicture:
          type: string
          nullable: true
        backgroundPicture:
          type: string
          nullable: true
        followerCount:
          type: integer
          nullable: true
        isFollowing:
          type: boolean
          nullable: true
        livestreamInformation:
          type: object
          properties:
            title:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            thumbnailUrl:
              type: string
              nullable: true

    CreateUserRequest:
      type: object
      required:
        - username
        - email
        - authProvider
      properties:
        username:
          type: string
          minLength: 4
          maxLength: 50
        email:
          type: string
          format: email
        isVerified:
          type: boolean
        authProvider:
          type: string
          enum: [google, local]

    UpdateUserRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
          minLength: 6
          maxLength: 20
        isActive:
          type: boolean
        phoneNumber:
          type: string
        bio:
          type: string
        displayName:
          type: string
          minLength: 6
          maxLength: 20

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /health:
    get:
      summary: Check service health
      operationId: getHealth
      responses:
        '200':
          description: Service is healthy
          content:
            text/plain:
              schema:
                type: string
                example: "OK"

  /users:
    get:
      summary: Get all users
      operationId: getAllUsers
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/search:
    get:
      summary: Search users by username
      operationId: searchUsers
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of matching users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{userId}:
    get:
      summary: Get user by ID
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/me:
    get:
      summary: Get current user
      operationId: getCurrentUser
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Current user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update current user
      operationId: updateCurrentUser
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/me/profile-picture:
    put:
      summary: Update user profile picture
      operationId: updateProfilePicture
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile-picture:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile picture updated successfully
          content:
            text/plain:
              schema:
                type: string
                example: "/path/to/profile-picture.jpg"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: File too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/me/background-picture:
    put:
      summary: Update user background picture
      operationId: updateBackgroundPicture
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                background-picture:
                  type: string
                  format: binary
      responses:
        '200':
          description: Background picture updated successfully
          content:
            text/plain:
              schema:
                type: string
                example: "/path/to/background-picture.jpg"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: File too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/me/stream-key:
    put:
      summary: Generate new stream API key
      operationId: generateStreamKey
      security:
        - BearerAuth: []
      responses:
        '200':
          description: New stream key generated
          content:
            text/plain:
              schema:
                type: string
                example: "new-stream-key"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{userId}/follow:
    post:
      summary: Follow a user
      operationId: followUser
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Successfully followed user
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Unfollow a user
      operationId: unfollowUser
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully unfollowed user
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/me/livestream:
    put:
      summary: Update livestream information
      operationId: updateLivestreamInfo
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                thumbnail:
                  type: string
                  format: binary
                thumbnailUrl:
                  type: string
      responses:
        '200':
          description: Livestream information updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    nullable: true
                  description:
                    type: string
                    nullable: true
                  thumbnailUrl:
                    type: string
                    nullable: true
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: File too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 